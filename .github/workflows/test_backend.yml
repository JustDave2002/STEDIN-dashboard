name: Test Pipeline

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Step 3: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 4: Set up environment files
      - name: Set up environment variables
        run: |
          # Ensure empty .env files exist
          touch ./DB_seeding/.env
          touch ./go-backend/.env

          # Populate DB_seeding/.env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> ./DB_seeding/.env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> ./DB_seeding/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> ./DB_seeding/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ./DB_seeding/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ./DB_seeding/.env

          # Populate go-backend/.env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> ./go-backend/.env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> ./go-backend/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> ./go-backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ./go-backend/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ./go-backend/.env

          # Debugging: Show env contents
          echo "DB Seeder env file:"
          cat ./DB_seeding/.env
          echo "Go Backend env file:"
          cat ./go-backend/.env
      

      # Step 5: Start Docker Compose and DB
      - name: Start Docker Compose
        working-directory: ./DB_seeding
        run: docker-compose up -d

      # Step 6: Wait-for-database loop
      - name: Wait for Database
        run: |
          source ./DB_seeding/.env
          for i in {1..20}; do
            echo "Attempt $i..."
            docker exec mariadb_backend mariadb-admin ping -u root --password="$MYSQL_ROOT_PASSWORD" --host=0.0.0.0 && break
            echo "Waiting for database to be ready..."
            sleep 5
          done

      # Step 7: Seed the database
      - name: Seed the database
        working-directory: ./DB_seeding
        run: go run .

      # Step 8: Install dependencies for go-backend
      - name: Download dependencies
        working-directory: ./go-backend
        run: go mod download

      # Step 9: Build the Go backend
      - name: Build backend
        working-directory: ./go-backend
        run: go build -v ./...

      # Step 10: Run tests and upload results
      - name: Run tests
        id: tests
        working-directory: ./go-backend
        run: |
          go test -v ./... > test-results.txt
          if [ $? -ne 0 ]; then
            exit 1
          fi

      # Step 11: Upload test results as an artifact
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: go-backend/test-results.txt

      # Step 12: Clean up
      - name: Tear down Docker Compose
        if: always()
        working-directory: ./DB_seeding
        run: docker-compose down
